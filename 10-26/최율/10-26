# 깃허브
풀 푸쉬

깃허브 데스크탑
a와 b가 있을때 a와b 둘다 수정한 코드를 보내면 코드를 받아올때
코드를 추가하거나 수정하는 부분에 코드가 없거나 다르면 오류가 생기므로
c라는 메인을 만들어 받아온다

# 브렌치 전략
hotfix  
코드가 이미 시중에 나왔는데 급하게 코드를 수정해야 할때

develop
이미 있는것에 새로운것을 추가하거나 자기들끼리 시험해볼때
* 따로 알아봤을 때 검색결과* 
= 다음 출시 버전을 개발할 때
= 기능 개발을 위한 브랜치들을 합치기 위해 사용, 이때 기능이 다 추가되고
버그가 다 수정이 된다면 master브랜치에 병합한다.


release
이번에 출시하는 버전을 준비할때

# 그외 따로 조사해본 것
master
제품으로 출시 가능한 브랜치

feature 
새로운 기능 개발 및 버그를 수정이 필요할 때마다 develop로 부터 분기하고
수정 및 개발이 완료 되면 develop에 다시 합친다


